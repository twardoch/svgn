Generating code snapshot in ./llms.txt ...
╭──────────────────── CodeToPrompt ────────────────────╮
│ Configuration for this run:                          │
│ Root Directory:                                      │
│ /Users/adam/Developer/vcs/github.twardoch/pub/svgn   │
│ Include Patterns: ['*']                              │
│ Exclude Patterns: ['*.svg', '.specstory', '*.md',    │
│ '*.txt', 'ref', 'testdata', '*.lock']                │
│ Respect .gitignore: True                             │
│ Show Line Numbers: False                             │
│ Count Tokens: True                                   │
│ Compress Code: True                                  │
│ Max Tokens: Unlimited                                │
│ Tree Depth: 5                                        │
│ Output Format: default                               │
│ Interactive Mode: False                              │
╰──────────────────────────────────────────────────────╯

╭──────────────── Processing Complete ─────────────────╮
│ Summary:                                             │
│ Files Processed: 124                                 │
│ Total Tokens: 127,605                                │
│ Output Destination: llms.txt                         │
│                                                      │
│ Top 3 Files by Tokens:                               │
│   - docs/assets/css/main.css (47,983 tokens)         │
│   - svgn/src/collections.rs (5,362 tokens)           │
│   - svgn/src/plugins/remove_unknowns_and_defaults.rs │
│ (4,955 tokens)                                       │
│                                                      │
│ Top 5 Extensions by Tokens:                          │
│   - .rs (51,371 tokens)                              │
│   - .css (49,238 tokens)                             │
│   - .sh (9,049 tokens)                               │
│   - .html (7,592 tokens)                             │
│   - .yml (3,068 tokens)                              │
╰──────────────────────────────────────────────────────╯
Building the svgn project...
   Compiling svgn v1.2.3 (/Users/adam/Developer/vcs/github.twardoch/pub/svgn/svgn)
warning: unused import: `MatchingContext`
   --> svgn/src/plugins/inline_styles_selector.rs:502:9
    |
502 |         MatchingContext, MatchingForInvalidation, MatchingMode, NeedsSelectorFlags, QuirksMode,
    |         ^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

error[E0053]: method `has_id` has an incompatible type for trait
   --> svgn/src/plugins/inline_styles_selector.rs:439:26
    |
439 |     fn has_id(&self, id: &String, _case_sensitivity: CaseSensitivity) -> bool {
    |                          ^^^^^^^ expected `SvgIdentifier`, found `std::string::String`
    |
    = note: expected signature `fn(&SvgElement<'_>, &SvgIdentifier, CaseSensitivity) -> _`
               found signature `fn(&SvgElement<'_>, &std::string::String, CaseSensitivity) -> _`
help: change the parameter type to match the trait
    |
439 -     fn has_id(&self, id: &String, _case_sensitivity: CaseSensitivity) -> bool {
439 +     fn has_id(&self, id: &SvgIdentifier, _case_sensitivity: CaseSensitivity) -> bool {
    |

error[E0053]: method `has_class` has an incompatible type for trait
   --> svgn/src/plugins/inline_styles_selector.rs:446:31
    |
446 |     fn has_class(&self, name: &String, _case_sensitivity: CaseSensitivity) -> bool {
    |                               ^^^^^^^ expected `SvgIdentifier`, found `std::string::String`
    |
    = note: expected signature `fn(&SvgElement<'_>, &SvgIdentifier, CaseSensitivity) -> _`
               found signature `fn(&SvgElement<'_>, &std::string::String, CaseSensitivity) -> _`
help: change the parameter type to match the trait
    |
446 -     fn has_class(&self, name: &String, _case_sensitivity: CaseSensitivity) -> bool {
446 +     fn has_class(&self, name: &SvgIdentifier, _case_sensitivity: CaseSensitivity) -> bool {
    |

error[E0053]: method `imported_part` has an incompatible type for trait
   --> svgn/src/plugins/inline_styles_selector.rs:455:36
    |
455 |     fn imported_part(&self, _name: &String) -> Option<String> {
    |                                    ^^^^^^^ expected `SvgIdentifier`, found `std::string::String`
    |
    = note: expected signature `fn(&SvgElement<'_>, &SvgIdentifier) -> std::option::Option<SvgIdentifier>`
               found signature `fn(&SvgElement<'_>, &std::string::String) -> std::option::Option<std::string::String>`
help: change the parameter type to match the trait
    |
455 -     fn imported_part(&self, _name: &String) -> Option<String> {
455 +     fn imported_part(&self, _name: &SvgIdentifier) -> Option<String> {
    |

error[E0053]: method `is_part` has an incompatible type for trait
   --> svgn/src/plugins/inline_styles_selector.rs:459:30
    |
459 |     fn is_part(&self, _name: &String) -> bool {
    |                              ^^^^^^^ expected `SvgIdentifier`, found `std::string::String`
    |
    = note: expected signature `fn(&SvgElement<'_>, &SvgIdentifier) -> _`
               found signature `fn(&SvgElement<'_>, &std::string::String) -> _`
help: change the parameter type to match the trait
    |
459 -     fn is_part(&self, _name: &String) -> bool {
459 +     fn is_part(&self, _name: &SvgIdentifier) -> bool {
    |

error[E0053]: method `has_custom_state` has an incompatible type for trait
   --> svgn/src/plugins/inline_styles_selector.rs:463:39
    |
463 |     fn has_custom_state(&self, _name: &String) -> bool {
    |                                       ^^^^^^^ expected `SvgIdentifier`, found `std::string::String`
    |
    = note: expected signature `fn(&SvgElement<'_>, &SvgIdentifier) -> _`
               found signature `fn(&SvgElement<'_>, &std::string::String) -> _`
help: change the parameter type to match the trait
    |
463 -     fn has_custom_state(&self, _name: &String) -> bool {
463 +     fn has_custom_state(&self, _name: &SvgIdentifier) -> bool {
    |

error[E0599]: no method named `unescape` found for reference `&BytesText<'_>` in the current scope
   --> svgn/src/parser.rs:113:34
    |
113 |                     let text = e.unescape().map_err(|e| ParseError::XmlError(e))?;
    |                                  ^^^^^^^^ method not found in `&BytesText<'_>`

error[E0599]: no method named `unescape` found for reference `&BytesText<'_>` in the current scope
   --> svgn/src/parser.rs:171:26
    |
170 |                       let doctype = e
    |  ___________________________________-
171 | |                         .unescape()
    | |                         -^^^^^^^^ method not found in `&BytesText<'_>`
    | |_________________________|
    |

error[E0593]: closure is expected to take 2 arguments, but it takes 3 arguments
   --> svgn/src/plugins/inline_styles.rs:218:9
    |
218 |           walk_element_tree_with_parent(element, None, |elem, parent, index| {
    |           ^                                            --------------------- takes 3 arguments
    |  _________|
    | |
219 | |             let wrapper = SvgElementWrapper::new(elem);
220 | |             for selector in selector_list.iter() {
221 | |                 let mut selector_caches = selectors::matching::SelectorCaches::default();
...   |
236 | |         });
    | |__________^ expected closure that takes 2 arguments

error[E0599]: no method named `iter` found for reference `&SelectorList<SvgSelectorImpl>` in the current scope
   --> svgn/src/plugins/inline_styles.rs:220:43
    |
220 |             for selector in selector_list.iter() {
    |                                           ^^^^ method not found in `&SelectorList<SvgSelectorImpl>`

error[E0599]: no method named `iter` found for reference `&SelectorList<SvgSelectorImpl>` in the current scope
   --> svgn/src/plugins/inline_styles.rs:290:23
    |
290 |         selector_list.iter().any(|selector| {
    |                       ^^^^ method not found in `&SelectorList<SvgSelectorImpl>`

error[E0599]: no method named `iter` found for reference `&SelectorList<SvgSelectorImpl>` in the current scope
   --> svgn/src/plugins/inline_styles.rs:597:10
    |
596 | /     selectors
597 | |         .iter()
    | |         -^^^^ method not found in `&SelectorList<SvgSelectorImpl>`
    | |_________|
    |

error[E0599]: no method named `iter` found for reference `&SelectorList<SvgSelectorImpl>` in the current scope
   --> svgn/src/plugins/remove_attributes_by_selector.rs:158:39
    |
158 |         for selector in selector_list.iter() {
    |                                       ^^^^ method not found in `&SelectorList<SvgSelectorImpl>`

error[E0277]: the trait bound `SvgSelectorImpl: selectors::Parser<'_>` is not satisfied
   --> svgn/src/plugins/remove_attributes_by_selector.rs:226:17
    |
225 |             let selector_list = match SelectorList::<SvgSelectorImpl>::parse(
    |                                       -------------------------------------- required by a bound introduced by this call
226 |                 &SvgSelectorImpl,
    |                 ^^^^^^^^^^^^^^^^ the trait `selectors::Parser<'_>` is not implemented for `SvgSelectorImpl`
    |
note: required by a bound in `SelectorList::<Impl>::parse`
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/selectors-0.30.0/parser.rs:511:12
    |
505 |     pub fn parse<'i, 't, P>(
    |            ----- required by a bound in this associated function
...
511 |         P: Parser<'i, Impl = Impl>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `SelectorList::<Impl>::parse`

error[E0277]: the trait bound `SvgSelectorImpl: selectors::Parser<'_>` is not satisfied
   --> svgn/src/plugins/remove_attributes_by_selector.rs:225:39
    |
225 |               let selector_list = match SelectorList::<SvgSelectorImpl>::parse(
    |  _______________________________________^
226 | |                 &SvgSelectorImpl,
227 | |                 &mut parser,
228 | |                 selectors::parser::ParseRelative::No,
229 | |             ) {
    | |_____________^ the trait `selectors::Parser<'_>` is not implemented for `SvgSelectorImpl`

warning: unused variable: `media_rule`
   --> svgn/src/plugins/inline_styles.rs:531:28
    |
531 |             CssRule::Media(media_rule) => {
    |                            ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_media_rule`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `selector_str`
   --> svgn/src/plugins/inline_styles.rs:587:19
    |
587 | fn parse_selector(selector_str: &str) -> Option<SelectorList<SvgSelectorImpl>> {
    |                   ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_selector_str`

Some errors have detailed explanations: E0053, E0277, E0593, E0599.
For more information about an error, try `rustc --explain E0053`.
warning: `svgn` (lib) generated 3 warnings
error: could not compile `svgn` (lib) due to 14 previous errors; 3 warnings emitted
